name: Release
on:
  push:
    branches:
      - main
      - next
    paths:
      - semantic/**/*
      - .github/workflows/release.yml

  pull_request:
    branches:
      - main
    paths:
      - semantic/**/*
      - .github/workflows/release.yml

env:
  GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

jobs:
  Release:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./semantic

    steps:
    - name: Checkout
      uses: actions/checkout@v3

    - name: Use Node.js 16
      uses: actions/setup-node@v3
      with:
        node-version: 16
        cache: 'yarn'
        cache-dependency-path: ./semantic/yarn.lock

    - name: Get branch name
      id: branch-name
      uses: tj-actions/branch-names@v5.4

    # - name: Get latest commit message
    #   run: |
    #       trim_new_line=$(echo -e "${{github.event.head_commit.message}}"|tr '\n' '_')
    #       echo "title=${trim_new_line}" >> $GITHUB_ENV
    #   id: get_message

    - name: Seet title
      run: |
        echo "title=anything" >> $GITHUB_ENV

    - name: Get Changed Folder
      uses: Stockopedia/action-get-changed-files@v1
      id: get_changed
      with:
        github-token: ${{ secrets.GITHUB_TOKEN }}
        foldersOnly: true 
        format: csv

    - name: Check branches
      run: |
        echo ${{github.head_ref}}
        echo ${{github.base_ref}}

    - name: Get folder Name
      id: folder_name
      uses: rishabhgupta/split-by@v1
      with:
        string: ${{ steps.get_changed.outputs.changed }}
        split-by: ','

    - name: Check
      run: |
        echo ${{steps.get_changed.outputs.changed}}
        echo ${{github.workspace}}
        ls -a


    - name: Setup
      working-directory: ./semantic
      run: |
          yarn install --frozen-lockfile
          yarn build

    - name: Create Artifact
      working-directory: ./semantic
      if: contains(steps.get_message.outputs.title,'Merge pull request')
      # if: "contains(github.base_ref, 'main') && contains(github.head_ref, 'release')"
      id: create_artifact
      run: |
        BUILD_NUM=$(echo $GITHUB_RUN_NUMBER)
        BUILD_ID=$(echo $GITHUB_SHA | head -c7)
        VERSION=generators+build.${BUILD_NUM}.${BUILD_ID}
        ARTIFACT_NAME=${VERSION}.zip
        cp package.json dist/
        cd dist && zip -r9q ${{ github.workspace }}/${ARTIFACT_NAME} . && cd ..
        ls -al ${{ github.workspace }}
        echo $ARITFACT_NAME
        echo ::set-output name=version::${VERSION}
        echo ::set-output name=artifact_name::${ARTIFACT_NAME}

    - name: Upload Artifact
      if: contains(steps.get_message.outputs.title,'Merge pull request') && !contains(steps.get_message.outputs.title,'release')
      # if: "contains(github.base_ref, 'main') && !contains(github.head_ref, 'release')"
      uses: actions/upload-artifact@v2
      with:
        name: ${{ steps.create_artifact.outputs.version }}
        path: ./${{ steps.create_artifact.outputs.artifact_name }}
        retention-days: 14

    # - name: Configure AWS credentials
    #   if: contains(steps.get_message.outputs.title, 'Merge pull request') && contains(steps.get_message.outputs.title, 'release')
    #   uses: aws-actions/configure-aws-credentials@v1
    #   with:
    #     aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
    #     aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
    #     source_dir: ./${{steps.create_artifact.outputs.artifact_name}}

    # - name: Download a single artifact
    #   uses: actions/download-artifact@v3
    #   with:
    #     name: ${{steps.create_artifact.outputs.version}}

    - name: Outputs
      run: |
          echo ${{github.base_ref}}
          echo ${{steps.create_artifact.outputs.artifact_name}}
          echo ${{steps.create_artifact.outputs.version}}
          echo ${{steps.get_message.outputs.sha}}
          echo ${{steps.get_message.outputs.action}}

    - name: Dry Run
      if: steps.branch-name.outputs.is_default == 'false'
      working-directory: ./semantic
      run: |
          yarn build
          yarn semantic-release -e semantic-release-monorepo --dry-run --no-ci

    - name: Release
      working-directory: ./semantic
      if: contains(env.title, 'Merge pull request') && contains(env.title, 'release/')
      run: yarn semantic-release -e semantic-release-monorepo

    - name: Get Previous tag
      id: previoustag
      uses: "WyriHaximus/github-action-get-previous-tag@v1"
      with:
          fallback: 1.0.0 # Optional fallback tag to use when no tag can be found

    - name: Publish Artifact to s3
      run: |
          echo ${{ steps.previoustag.outputs.tag }}

    - name: Github Worksp
      run: |
        echo ${{github.workspace}}

    # - name: Publish Artifact to s3
    #   env:
    #     ARTIFACT_NAME: ${{ steps.create.outputs.artifact_name }}
    #     ARTIFACT_REPO: s3://com.laudio.artifacts/releases/services/${{ matrix.appname }}
    #   run: |
    #     aws s3 cp ${ARTIFACT_NAME} ${ARTIFACT_REPO}/${ARTIFACT_NAME}
    outputs:
      latest_commit: ${{env.title}}
  Check-Output:
    needs: Release
    runs-on: ubuntu-latest
    steps:

      - name: Check
        run: echo ${{needs.Release.outputs.latest_commit}}

      - name: print
        if: contains(needs.Release.outputs.latest_commit , 'hello')
        run: |
          echo ${{needs.Release.outputs.latest_commit}}
