name: Release
on:
  push:
    branches:
      - main
      - next
    # paths:
    #   - semantic/**/*

  pull_request:
    branches:
      - main
      - next
    types: [synchronize, closed, opened]
    # paths:
    #   - semantic/**/*

env:
  GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout
      uses: actions/checkout@v3

    - name: Use Node.js 16
      uses: actions/setup-node@v3
      with:
        node-version: 16
        cache: 'yarn'
        cache-dependency-path: ./semantic/yarn.lock

    - name: Get latest commit message
      run: |
          echo '::set-output name=title::${{ github.event.head_commit.message }}'
          echo '::set-output name=sha::${{ github.sha }}'
          echo '::set-output name=action::${{ github.ref }}'
      id: get_message

    - name: Setup
      working-directory: ./semantic
      run: |
          yarn install --frozen-lockfile
          yarn build

    - name: Create Build Artifact
      working-directory: ./semantic
      if: contains(steps.get_message.outputs.title,'Merge pull request') && !contains(steps.get_message.outputs.title,'release')
      id: create_build_artifact
      run: |
        BUILD_NUM=$(echo $GITHUB_RUN_NUMBER)
        BUILD_ID=$(echo $GITHUB_SHA | head -c7)
        VERSION=generators+build.${BUILD_NUM}.${BUILD_ID}
        ARTIFACT_NAME=${VERSION}.zip
        cp package.json dist/
        cd dist && zip -r9q ${{ github.workspace }}/${ARTIFACT_NAME} . && cd ..
        ls -al ${{ github.workspace }}
        echo $ARITFACT_NAME
        echo ::set-output name=version::${VERSION}
        echo ::set-output name=artifact_name::${ARTIFACT_NAME}

    - name: Upload Build Artifact
      if: contains(steps.get_message.outputs.title,'Merge pull request') && !contains(steps.get_message.outputs.title,'release')
      uses: actions/upload-artifact@v2
      with:
        name: ${{ steps.create_build_artifact.outputs.version }}
        path: ./${{ steps.create_build_artifact.outputs.artifact_name }}
        retention-days: 14

    - name: Release
      if: contains(steps.get_message.outputs.title,'Merge pull request') && contains(steps.get_message.outputs.title,'release')
      working-directory: ./semantic
      run: yarn semantic-release

    - name: Get Previous tag
      id: previoustag
      uses: "WyriHaximus/github-action-get-previous-tag@v1"
      with:
          fallback: 1.0.0

    - name: Create Release Artifact
      working-directory: ./semantic
      if: contains(steps.get_message.outputs.title,'Merge pull request') && contains(steps.get_message.outputs.title,'release')
      id: create_release_artifact
      run: |
        VERSION=${{ steps.previoustag.outputs.tag }}
        ARTIFACT_NAME=${VERSION}.zip
        cp package.json dist/
        cd dist && zip -r9q ${{ github.workspace }}/${ARTIFACT_NAME} . && cd ..
        ls -al ${{ github.workspace }}
        echo $ARITFACT_NAME
        echo ::set-output name=version::${VERSION}
        echo ::set-output name=artifact_name::${ARTIFACT_NAME}

    - name: Outputs
      run: |
          echo ${{steps.create_release_artifact.outputs.artifact_name}}

    # - name: Configure AWS credentials
    #   if: contains(steps.get_message.outputs.title, 'Merge pull request') && contains(steps.get_message.outputs.title, 'release')
    #   uses: aws-actions/configure-aws-credentials@v1
    #   with:
    #     aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
    #     aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
    #     source_dir: ./${{steps.create_artifact.outputs.artifact_name}}

    - name: Publish Artifact to s3
      if: contains(steps.get_message.outputs.title, 'Merge pull request') && contains(steps.get_message.outputs.title, 'release')
      env:
          ARTIFACT_NAME: ${{ steps.create_release_artifact.outputs.artifact_name }}
          ARTIFACT_REPO: s3://com.laudio.artifacts/releases/generators/
      run: |
        aws s3 cp ${ARTIFACT_NAME} ${ARTIFACT_REPO}/${ARTIFACT_NAME}



